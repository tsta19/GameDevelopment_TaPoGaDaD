//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Movement/ThirdPersonAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ThirdPersonAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ThirdPersonAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ThirdPersonAction"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""45fc3fed-acac-4d20-9dfb-8466a52cd5d4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""1c0c7619-6d91-4235-b567-6363b0aa0217"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""cfce17ab-0ec4-4d2f-977f-0d8459f689f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""52dfc3b9-3424-4176-9f4f-e417a420e914"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scavenge"",
                    ""type"": ""Button"",
                    ""id"": ""efff5ffc-a6c7-4127-b7ce-bf86f06ada88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sneak"",
                    ""type"": ""Button"",
                    ""id"": ""d9a10c02-ac11-4639-9058-171c398d9687"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""baslls"",
                    ""type"": ""Button"",
                    ""id"": ""3108aec3-7862-4930-a679-d5a512b8068c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""cck"",
                    ""type"": ""Button"",
                    ""id"": ""a4215fec-4729-4dc3-a2e7-16c878c2bbb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""251213d2-dd22-4888-8fb9-2d3e0c01aeb9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""humanwalk"",
                    ""type"": ""Button"",
                    ""id"": ""b32eba5a-2bed-425e-9a25-e23059f3223a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""f9ab37bf-0b6f-418f-a9fd-f5c46deaf7b8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""535c40a2-d6fd-4a1f-9010-4b51853d240d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f931f0fd-6e12-4d9a-a5a9-609616848ea5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""35aa54aa-feee-48b9-8f46-e8e8324889fe"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1432c652-54af-4566-ac6a-2f7a6bf555a0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""14b5194f-f0f2-4dbb-a8b4-c8560b79f0f1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76c77a17-8f75-4775-87e4-03a79379884a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94d493c9-9d30-49fd-a6c8-e673d6afc13a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scavenge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""410c0ad3-956d-43ca-bd21-fca019d14349"",
                    ""path"": ""<Keyboard>/#(G)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sneak"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4093cc77-010e-47cd-b11e-10ca97abe310"",
                    ""path"": ""<Keyboard>/#(C)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""baslls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff846683-e381-460a-8f92-caf5c91c16f9"",
                    ""path"": ""<Keyboard>/#(V)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""cck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e8e9858-4f10-4a1d-8f74-2814716c6d10"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40e98c29-46fe-4acf-904e-a8cb57b6f25c"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""humanwalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
                }
            ]
        },
        {
            ""name"": ""AdvancedWalk"",
            ""id"": ""20f77af4-3875-428a-9447-5b3cfd415507"",
            ""actions"": [
                {
                    ""name"": ""R_Move"",
                    ""type"": ""Value"",
                    ""id"": ""7620e6f8-3ea8-4405-8bef-654090b3f826"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""L_Move"",
                    ""type"": ""Button"",
                    ""id"": ""e2778d38-dc47-4a4a-9a77-a9ba2e0f824f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""da83416e-4d41-46b7-a056-15c7661e03f5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""d3345215-d0a1-43ec-97f6-4349006d591a"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Modifier"",
                    ""id"": ""4732b135-e3e6-4fe7-bf06-e3ea9784e042"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Binding"",
                    ""id"": ""47c3b08e-56f3-4be7-8b67-ca9f80522274"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b878d74e-364c-4381-893e-e38a8f5f5766"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""43cecea1-19bd-40a0-96fe-b1bc679c641f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f9c10627-cca3-4dba-8da5-1cce821f3352"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""19e6f664-3c92-4d67-a613-4b8793d39914"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8c5bfc2b-8500-415c-a6df-96f8e8214a8f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5d92692b-f1f4-430c-b368-5943e89dfa39"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""3b809cf7-c9fb-428f-97b2-1fbf9aa4ea68"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0ddac61a-1580-4449-bddb-655b2374deff"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""718944aa-d356-4da9-8a11-013564f51a6a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""14e0db79-4b3c-4079-aed7-5fd6ea573c17"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cc510a12-41fb-4731-9ebb-f94cbd0c2b5d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""New control scheme"",
            ""bindingGroup"": ""New control scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<VirtualMouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Scavenge = m_Player.FindAction("Scavenge", throwIfNotFound: true);
        m_Player_Sneak = m_Player.FindAction("Sneak", throwIfNotFound: true);
<<<<<<< Updated upstream
        m_Player_baslls = m_Player.FindAction("baslls", throwIfNotFound: true);
        m_Player_cck = m_Player.FindAction("cck", throwIfNotFound: true);
<<<<<<< Updated upstream
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_humanwalk = m_Player.FindAction("humanwalk", throwIfNotFound: true);
=======
<<<<<<< Updated upstream
<<<<<<< Updated upstream
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_humanwalk = m_Player.FindAction("humanwalk", throwIfNotFound: true);
=======
=======
>>>>>>> Stashed changes
<<<<<<< HEAD
>>>>>>> Stashed changes
=======
        // AdvancedWalk
        m_AdvancedWalk = asset.FindActionMap("AdvancedWalk", throwIfNotFound: true);
        m_AdvancedWalk_R_Move = m_AdvancedWalk.FindAction("R_Move", throwIfNotFound: true);
        m_AdvancedWalk_L_Move = m_AdvancedWalk.FindAction("L_Move", throwIfNotFound: true);
        m_AdvancedWalk_Move = m_AdvancedWalk.FindAction("Move", throwIfNotFound: true);
>>>>>>> Stashed changes
=======
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_humanwalk = m_Player.FindAction("humanwalk", throwIfNotFound: true);
>>>>>>> main
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Scavenge;
    private readonly InputAction m_Player_Sneak;
    private readonly InputAction m_Player_baslls;
    private readonly InputAction m_Player_cck;
    private readonly InputAction m_Player_Run;
    private readonly InputAction m_Player_humanwalk;
    public struct PlayerActions
    {
        private @ThirdPersonAction m_Wrapper;
        public PlayerActions(@ThirdPersonAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Scavenge => m_Wrapper.m_Player_Scavenge;
        public InputAction @Sneak => m_Wrapper.m_Player_Sneak;
        public InputAction @baslls => m_Wrapper.m_Player_baslls;
        public InputAction @cck => m_Wrapper.m_Player_cck;
        public InputAction @Run => m_Wrapper.m_Player_Run;
        public InputAction @humanwalk => m_Wrapper.m_Player_humanwalk;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Scavenge.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScavenge;
                @Scavenge.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScavenge;
                @Scavenge.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScavenge;
                @Sneak.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSneak;
                @Sneak.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSneak;
                @Sneak.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSneak;
                @baslls.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBaslls;
                @baslls.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBaslls;
                @baslls.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBaslls;
                @cck.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCck;
                @cck.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCck;
                @cck.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCck;
                @Run.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @humanwalk.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHumanwalk;
                @humanwalk.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHumanwalk;
                @humanwalk.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHumanwalk;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Scavenge.started += instance.OnScavenge;
                @Scavenge.performed += instance.OnScavenge;
                @Scavenge.canceled += instance.OnScavenge;
                @Sneak.started += instance.OnSneak;
                @Sneak.performed += instance.OnSneak;
                @Sneak.canceled += instance.OnSneak;
                @baslls.started += instance.OnBaslls;
                @baslls.performed += instance.OnBaslls;
                @baslls.canceled += instance.OnBaslls;
                @cck.started += instance.OnCck;
                @cck.performed += instance.OnCck;
                @cck.canceled += instance.OnCck;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @humanwalk.started += instance.OnHumanwalk;
                @humanwalk.performed += instance.OnHumanwalk;
                @humanwalk.canceled += instance.OnHumanwalk;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // AdvancedWalk
    private readonly InputActionMap m_AdvancedWalk;
    private IAdvancedWalkActions m_AdvancedWalkActionsCallbackInterface;
    private readonly InputAction m_AdvancedWalk_R_Move;
    private readonly InputAction m_AdvancedWalk_L_Move;
    private readonly InputAction m_AdvancedWalk_Move;
    public struct AdvancedWalkActions
    {
        private @ThirdPersonAction m_Wrapper;
        public AdvancedWalkActions(@ThirdPersonAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @R_Move => m_Wrapper.m_AdvancedWalk_R_Move;
        public InputAction @L_Move => m_Wrapper.m_AdvancedWalk_L_Move;
        public InputAction @Move => m_Wrapper.m_AdvancedWalk_Move;
        public InputActionMap Get() { return m_Wrapper.m_AdvancedWalk; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AdvancedWalkActions set) { return set.Get(); }
        public void SetCallbacks(IAdvancedWalkActions instance)
        {
            if (m_Wrapper.m_AdvancedWalkActionsCallbackInterface != null)
            {
                @R_Move.started -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnR_Move;
                @R_Move.performed -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnR_Move;
                @R_Move.canceled -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnR_Move;
                @L_Move.started -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnL_Move;
                @L_Move.performed -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnL_Move;
                @L_Move.canceled -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnL_Move;
                @Move.started -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_AdvancedWalkActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_AdvancedWalkActionsCallbackInterface = instance;
            if (instance != null)
            {
                @R_Move.started += instance.OnR_Move;
                @R_Move.performed += instance.OnR_Move;
                @R_Move.canceled += instance.OnR_Move;
                @L_Move.started += instance.OnL_Move;
                @L_Move.performed += instance.OnL_Move;
                @L_Move.canceled += instance.OnL_Move;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public AdvancedWalkActions @AdvancedWalk => new AdvancedWalkActions(this);
    private int m_NewcontrolschemeSchemeIndex = -1;
    public InputControlScheme NewcontrolschemeScheme
    {
        get
        {
            if (m_NewcontrolschemeSchemeIndex == -1) m_NewcontrolschemeSchemeIndex = asset.FindControlSchemeIndex("New control scheme");
            return asset.controlSchemes[m_NewcontrolschemeSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnScavenge(InputAction.CallbackContext context);
        void OnSneak(InputAction.CallbackContext context);
        void OnBaslls(InputAction.CallbackContext context);
        void OnCck(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnHumanwalk(InputAction.CallbackContext context);
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
    }
    public interface IAdvancedWalkActions
    {
        void OnR_Move(InputAction.CallbackContext context);
        void OnL_Move(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
    }
}
